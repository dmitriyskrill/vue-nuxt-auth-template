const test = 1
console.log(test2)

const fn2 = () => {

}
console.log(test) // 1

var test2 // тоже всплывают

// отличия var - let
// всплытие переменных
// интерпритатор, карта областей видимости (первичный проход)
// var внутри if или for будет видна выше...  только в функциях
// создается для var область видимости
// для let любой блок кода "{}" задают область видимости
// Замыкания - ДЗ
// bind, call, apply
// Варианты вызова функции:
//   Вызов функции в контексте обработки события (this - node DOM)
//   Функция без контекста fn2(),
//   в контексте объекта obj.fn2(),
//   с помощью new fn2
// Стрелочные функции
const fn3 = () => console.log()
const obj = {
  name: 'sf',

  fn2 () {
    // this контекст вызова функции и определяется в момент вызова функции
    console.log(this.name)
  }
}

function fn () { // тоже всплывают

}
new fn()
// Прототип
// "в js все основано на объектах", boxing элементарных типов данных

const string = 'string'
string.length // заменяет строку объектом, делает работу, и далее удаляет
// созданный объект

//Посмотреть функцию контруктор без классов

// Класс - описание объекта
// в js классов нет, Класс награждает объекты своим типом данных
